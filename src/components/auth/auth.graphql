type loginRes {
  accessToken: String
  message: String!
}

type registerRes {
  id: ID
  name: String
  email: String
  created: Boolean!
  message: String!
}

type getGuestTokenRes {
  accessToken: String!
}

type isvalidGuestTokenRes {
  isvalid: Boolean!
}

input loginInput {
  email: String
  password: String
}

type Query {
    getGuestToken: getGuestTokenRes!
}

input registerInput {
  name: String
  email: String
  password: String
}

type Mutation {
  login(loginInput: loginInput!): loginRes!
  register(registerInput: registerInput!): registerRes!
  isvalidGuestToken(token: String!): isvalidGuestTokenRes!
}
